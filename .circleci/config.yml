# use CircleCI 2.0
version: 2.1
general:
  branches:
    only:
     - master # list of branches to build
# parameters:
parameters:
  GIT_BRANCH:
    description: Git branch to build
    type: string
    default: master
  DEPLOY_MODE:
        default: "test"
        description: Deploy mode
        type: enum
        enum: ["test", "staging"]

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    # directory where steps will run
    working_directory: ~/demo-springboot
    environment:
      PRODUCT_RELEASE: "0.1.0"

    docker: # run the steps with Docker
      - image: circleci/openjdk:8-jdk-stretch

    steps: # a collection of executable commands

      - checkout

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: demo-springboot-{{ checksum "pom.xml" }}
      
      - run: mvn dependency:go-offline # gets the project dependencies
      
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: demo-springboot-{{ checksum "pom.xml" }}
      
      - run:
          command: |
            PRODUCT_VERSION=${PRODUCT_RELEASE}-${CIRCLE_BUILD_NUM}
            mvn package -Drelease=${PRODUCT_RELEASE} \
                     -DbuildNumber=${BUILD_NUMBER}
      
      - store_test_results: # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard. 
      # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: target/surefire-reports
      
      # - store_artifacts: # store the uberjar as an artifact
      # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
      #    path: target/demo-springboot-0.0.1-SNAPSHOT.jar
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples 